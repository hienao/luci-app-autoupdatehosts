<%+header%>

<style>
.preview-area {
    min-height: 200px;
    max-height: 400px;
    overflow-y: auto;
    border: 1px solid #ccc;
    padding: 10px;
    margin: 10px 0;
    display: none;
    white-space: pre-wrap;
    font-family: monospace;
    background-color: #f5f5f5;
}
.tab-button {
    margin-right: 10px;
    margin-bottom: 20px;
}
.tab-button.active {
    background-color: #0069d6;
    color: white;
}
.tab-content {
    display: none;
}
.tab-content.active {
    display: block;
}
.main-container {
    padding: 1rem;
}
.tabs-container {
    margin-bottom: 1rem;
}
</style>

<div class="main-container">
    <h2><%:Auto Update Hosts Settings%></h2>

    <div class="tabs-container">
        <input type="button" id="tab_settings" class="cbi-button tab-button" value="<%:Settings%>" onclick="switchTab('settings')" />
        <input type="button" id="tab_log" class="cbi-button tab-button" value="<%:Log%>" onclick="switchTab('log')" />
    </div>

    <div id="settings_content" class="tab-content">
        <div class="cbi-map-descr"><%:Configure automatic hosts file updates%></div>
        <div class="cbi-section">
            <div class="cbi-section-node">
                <div class="cbi-value">
                    <label class="cbi-value-title"><%:Enable%></label>
                    <div class="cbi-value-field">
                        <input type="checkbox" id="enabled" />
                    </div>
                </div>
                
                <div class="cbi-value">
                    <label class="cbi-value-title"><%:Update Schedule%></label>
                    <div class="cbi-value-field">
                        <input type="text" id="schedule" class="cbi-input-text" />
                        <div class="cbi-value-description"><%:Cron expression format (e.g., "0 2 * * *" for 2 AM daily)%></div>
                    </div>
                </div>
                
                <div class="cbi-value">
                    <label class="cbi-value-title"><%:Hosts URLs%></label>
                    <div class="cbi-value-field">
                        <textarea id="urls" class="cbi-input-textarea" style="width: 100%; height: 100px;"></textarea>
                        <div class="cbi-value-description"><%:Enter URLs (one per line) for hosts files%></div>
                    </div>
                </div>
                
                <div class="cbi-value">
                    <div class="cbi-value-field">
                        <div id="preview" class="preview-area"></div>
                    </div>
                </div>
                
                <div class="cbi-value-field">
                    <input type="button" id="btn_view_hosts" class="btn cbi-button cbi-button-apply" value="<%:View Current Hosts%>" />
                    <input type="button" id="btn_preview_hosts" class="btn cbi-button cbi-button-apply" value="<%:Preview Hosts%>" />
                    <input type="button" id="btn_save" class="btn cbi-button cbi-button-save" value="<%:Save%>" />
                </div>
            </div>
        </div>
    </div>

    <div id="log_content" class="tab-content">
        <div class="cbi-section">
            <div class="cbi-section-node">
                <div class="cbi-value">
                    <div class="cbi-value-field">
                        <input type="button" id="log_control" class="cbi-button cbi-button-apply" value="<%:Start Log%>" onclick="toggleLog()" />
                        <input type="button" class="btn cbi-button cbi-button-remove" value="<%:Clear Log%>" onclick="clearLog()" />
                    </div>
                </div>
                <div class="cbi-value">
                    <div class="cbi-value-field">
                        <textarea id="log_textarea" style="width: 100%; height: 300px; padding: 5px; font-family: monospace;" readonly="readonly"></textarea>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">//<![CDATA[
    var previewContent = '';
    
    function loadConfig() {
        XHR.get('<%=luci.dispatcher.build_url("admin", "services", "autoupdatehosts", "get_config")%>', null,
            function(x, data) {
                document.getElementById('enabled').checked = data.enabled === "1";
                document.getElementById('urls').value = data.urls;
                document.getElementById('schedule').value = data.schedule;
            }
        );
    }
    
    function previewHosts() {
        var preview = document.getElementById('preview');
        preview.style.display = 'block';
        preview.innerHTML = '正在获取...';
        
        XHR.get('<%=luci.dispatcher.build_url("admin", "services", "autoupdatehosts", "preview")%>', null,
            function(x, data) {
                if (x.status === 200) {
                    var content = data || '预览内容为空';
                    content = content.replace(/&/g, '&amp;')
                                   .replace(/</g, '&lt;')
                                   .replace(/>/g, '&gt;')
                                   .replace(/"/g, '&quot;')
                                   .replace(/'/g, '&#039;')
                                   .replace(/\n/g, '<br>');
                    preview.innerHTML = content;
                    previewContent = data;
                } else {
                    preview.innerHTML = '预览失败';
                }
            },
            function() {
                preview.innerHTML = '预览失败';
            }
        );
    }
    
    function saveAll() {
        if (!previewContent) {
            alert('<%:Please preview content first%>');
            return;
        }
        
        var data = {
            enabled: document.getElementById('enabled').checked ? "1" : "0",
            urls: document.getElementById('urls').value,
            schedule: document.getElementById('schedule').value
        };
        
        XHR.post('<%=luci.dispatcher.build_url("admin", "services", "autoupdatehosts", "save_config")%>', data,
            function(x, result) {
                if (result.code === 0) {
                    var hostData = {
                        content: previewContent
                    };
                    XHR.post('<%=luci.dispatcher.build_url("admin", "services", "autoupdatehosts", "save_hosts")%>', hostData,
                        function(x, result) {
                            if (result.code === 0) {
                                alert('<%:Save Success%>');
                            } else {
                                alert(result.msg);
                            }
                        }
                    );
                } else {
                    alert(result.msg);
                }
            }
        );
    }
    
    var logTimer = null;
    var isLogging = false;

    function switchTab(tabName) {
        document.querySelectorAll('.tab-button').forEach(function(btn) {
            btn.classList.remove('active');
        });
        document.getElementById('tab_' + tabName).classList.add('active');

        document.querySelectorAll('.tab-content').forEach(function(content) {
            content.classList.remove('active');
        });
        document.getElementById(tabName + '_content').classList.add('active');
    }

    function toggleLog() {
        var btn = document.getElementById('log_control');
        isLogging = !isLogging;
        
        if (isLogging) {
            btn.value = '<%:Stop Log%>';
            startLogging();
        } else {
            btn.value = '<%:Start Log%>';
            stopLogging();
        }
    }

    function startLogging() {
        if (logTimer) return;
        logTimer = setInterval(fetchLog, 1000);
    }

    function stopLogging() {
        if (logTimer) {
            clearInterval(logTimer);
            logTimer = null;
        }
    }

    function clearLog() {
        document.getElementById('log_textarea').value = '';
    }

    function fetchLog() {
        XHR.get('<%=luci.dispatcher.build_url("admin", "services", "autoupdatehosts", "get_log")%>', null,
            function(x, data) {
                if (data && data.log) {
                    document.getElementById('log_textarea').value = data.log;
                    var textarea = document.getElementById('log_textarea');
                    textarea.scrollTop = textarea.scrollHeight;
                }
            }
        );
    }

    function showCurrentHosts() {
        var preview = document.getElementById('preview');
        preview.style.display = 'block';
        preview.innerHTML = '正在获取...';
        
        XHR.get('<%=luci.dispatcher.build_url("admin", "services", "autoupdatehosts", "get_hosts")%>', null,
            function(x, data) {
                console.log('Response status:', x.status);
                console.log('Raw data:', data);
                console.log('Data type:', typeof data);
                console.log('Data length:', data ? data.length : 0);
                
                if (x.status === 200) {
                    if (data === undefined || data === null || data === '') {
                        preview.innerHTML = '当前 hosts 文件为空';
                        return;
                    }
                    
                    var content = String(data);
                    console.log('Processed content:', content);
                    
                    content = content.replace(/&/g, '&amp;')
                                   .replace(/</g, '&lt;')
                                   .replace(/>/g, '&gt;')
                                   .replace(/"/g, '&quot;')
                                   .replace(/'/g, '&#039;')
                                   .replace(/\n/g, '<br>');
                    
                    console.log('Escaped content:', content);
                    preview.innerHTML = content;
                    previewContent = data;
                } else {
                    preview.innerHTML = '获取 hosts 文件失败: ' + x.status;
                }
            },
            function(error) {
                console.log('Request error:', error);
                preview.innerHTML = '获取 hosts 文件失败: ' + (error || '未知错误');
            }
        );
    }

    window.onload = function() {
        loadConfig();
        switchTab('settings');

        // 绑定按钮事件
        var btnViewHosts = document.getElementById('btn_view_hosts');
        if (btnViewHosts) {
            btnViewHosts.onclick = showCurrentHosts;
        }

        var btnPreviewHosts = document.getElementById('btn_preview_hosts');
        if (btnPreviewHosts) {
            btnPreviewHosts.onclick = previewHosts;
        }

        var btnSave = document.getElementById('btn_save');
        if (btnSave) {
            btnSave.onclick = saveAll;
        }
    }
//]]></script>

<%+footer%> 